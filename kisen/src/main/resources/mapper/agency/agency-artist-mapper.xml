<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="agency-artist">
  <insert id="insertIdol">
  	insert into
  		idol
  	values(
  		seq_idol.nextval,
  		#{idolName},
  		0,
  		#{agencyNo}
  	)
  	
  	<selectKey keyProperty="idolNo" resultType="_int" order="AFTER">
  		select 
  			seq_idol.currval
  		from
  		 	dual
  	</selectKey>
  </insert>
  
	<insert id="insertIdolImg"> 
		insert into 
		idol_img
		values( seq_idol_img.nextval, #{idolNo}, #{originalFilename}, #{renamedFilename},default ) 
	</insert>
	
	<select id="selectIdolNameList" resultMap ="idolNameList">
		select 
			idol_no, 
			idol_name 
		from idol
		where 
			agency_no= 
			(select agency_no from agency where fan_no = #{fanNo})
	</select>
	
	
	<select id="selectAllIdolName" resultMap ="idolNameList">
		select 
			idol_no, 
			idol_name 
		from idol
		order by idol_name
	</select>
	
	<resultMap type="idol" id="idolNameList">
		<id column ="idol_no" property="idolNo"/>
		<result column="idol_name" property="idolName"/>
	</resultMap>
	
	
	
	
	<select id="selectIdolList" resultMap ="idolCollectionMap">
		select 
			* 
		from 
			idol i 
			left join idol_img ii
			    on i.idol_no = ii.idol_no
		    left join idol_mv im
		        on i.idol_no = im.idol_no
		where 
			agency_no= 
			(select agency_no from agency where fan_no = #{fanNo})
	</select>
	
	
	
  	<select id="selectIdolTotalContents" resultType="_int">
  		select count(*) from idol where agency_no = 
			(select agency_no from agency where fan_no = #{fanNo})
  	</select>
	<select id="selectOneIdol" resultType="idol">
		select * from idol where idol_name = #{idolName}
	</select>
	
	
	<select id="selectIdol" resultMap="idolCollectionMap">
		select 
			* 
		from 
			idol i 
			left join idol_img ii
			    on i.idol_no = ii.idol_no
		    left join idol_mv im
		        on i.idol_no = im.idol_no
		where 
			 i.idol_no = #{idolNo}
	</select>
	
	
	<insert id="insertIdolMv"> 
		insert into 
		idol_mv
		values(seq_idol_mv_no.nextval, #{idolNo}, #{mvLink}) 
	</insert>
	
	
	<resultMap type="idol" id="idolCollectionMap">
		<id column ="idol_no" property="idolNo"/>
		<result column="idol_name" property="idolName"/>
		<result column="fan_cnt" property="fanCnt"/>
		<result column="agency_no" property="agencyNo"/>
		
		<collection property="idolImg" ofType="IdolImg">
		 	<id column ="idol_img_no" property="idolImgNo"/>
		 	<result column="idol_no" property="idolNo"/>
		 	<result column="original_filename" property="originalFilename"/>
		 	<result column="renamed_filename" property="renamedFilename"/>
		 	<result column="upload_date" property="uploadDate"/>
		</collection>
		
		<collection property="idolMv" ofType="IdolMv">
		 	<id column ="mv_no" property="mvNo"/>
		 	<result column="idol_no" property="idolNo"/>
		 	<result column="mv_link" property="mvLink"/>
		</collection>
	</resultMap>
	
	
	<update id="updateIdol">
		update 
			idol
		set 
			idol_name = #{idolName}
		where 
			idol_no = #{idolNo}
	</update>
	
	<update id="updateIdolImg">
		update 
			idol_img
		set 
			original_filename = #{originalFilename},
			renamed_filename = #{renamedFilename}
		where 
			idol_no = #{idolNo}
	</update>
	
	
	<update id="updateIdolMv">
		update 
			idol_mv
		set 
			mv_link = #{mvLink}
		where 
			idol_no = #{idolNo}
	</update>
	
	
	
</mapper>